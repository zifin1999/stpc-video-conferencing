#body-row {
    margin-left: 0;
    margin-right: 0;
}
#sidebar-container {
    min-height: 100vh;
    background-color: #333;
    padding: 0;
}

/* Sidebar sizes when expanded and collapsed */
.sidebar-expanded {
    width: 230px;
}
.sidebar-collapsed {
    width: 60px;
}

/* Menu item */
#sidebar-container .list-group a {
    height: 50px;
    color: white;
}

/* Submenu item */
#sidebar-container .list-group .sidebar-submenu a {
    height: 45px;
    padding-left: 30px;
}
.sidebar-submenu {
    font-size: 0.9rem;
}

/* Separators */
.sidebar-separator-title {
    background-color: #333;
    height: 35px;
}
.sidebar-separator {
    background-color: #333;
    height: 25px;
}
.logo-separator {
    background-color: #333;
    height: 60px;
}

/* Closed submenu icon */
#sidebar-container .list-group .list-group-item[aria-expanded="false"] .submenu-icon::after {
    content: "\f0d7";
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    display: inline;
    text-align: right;
    padding-left: 10px;
}

/* Opened submenu icon */
#sidebar-container .list-group .list-group-item[aria-expanded="true"] .submenu-icon::after {
    content: "\f0da";
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    display: inline;
    text-align: right;
    padding-left: 10px;
}


.full-width-list {
    width: 100%; /* Full width */
    max-height: 200px; /* Adjust height as needed */
    overflow-y: auto;  /* Enable vertical scrolling if content overflows */
    padding: 10px; /* Optional: Add padding inside the container */
    border: 1px solid #ddd; /* Optional: Add border for visibility */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
}

.full-width-list ol {
    margin: 0;
    padding: 0;
    list-style-position: inside; /* Adjust list marker position */
}

.full-width-list li {
    margin-bottom: 10px; /* Space between list items */
}

/* Full-width container with padding, border, and scrollbar */
.custom-container {
    flex: 1;
    border: 1px solid #ddd;
    border-radius: 8px;
    background-color: #f9f9f9;
    overflow-y: auto;
    padding: 20px;
    box-sizing: border-box;
    max-height: calc(100vh - 120px); /* Adjust the value as needed to fit within the viewport */
}



/* General button styles */
.btn-outline-yes, .btn-outline-no {
    border-radius: 4px;
    border-width: 2px;
    border-style: solid;
    color: inherit;
    transition: all 0.3s ease;
}

/* Default styles for Yes button */
.btn-outline-yes {
    border-color: green;
    color: green;
    background-color: transparent;
}

/* Hover styles for Yes button */
.btn-outline-yes:hover,
.btn-outline-yes.active {
    background-color: green;
    color: white;
    border-color: green;
}

/* Default styles for No button */
.btn-outline-no {
    border-color: red;
    color: red;
    background-color: transparent;
}

/* Hover styles for No button */
.btn-outline-no:hover,
.btn-outline-no.active {
    background-color: red;
    color: white;
    border-color: red;
}

/* Ensure the button retains the active state styling */
.btn-outline-yes.active,
.btn-outline-no.active {
    pointer-events: none;
}

/* waiting room css */
.circular-button {
    position: fixed; /* Change to fixed for sticky effect */
    bottom: 20px; /* Distance from bottom */
    width: 60px; /* Width of the button */
    height: 60px; /* Height of the button */
    border-radius: 50%; /* Makes it circular */
    border: none; /* Remove default border */
    color: white; /* Text color */
    font-size: 24px; /* Icon size */
    z-index: 1000; /* Ensure they are above other content */
}
.left-button {
    left: 20px; /* Distance from left */
    background-color: #007bff; /* Button color */
}
.right-button {
    right: 20px; /* Distance from right */
    background-color: #28a745; /* Button color */
}

.container-fluid.wait-bg {
    background: url('../assets/waiting-room-bg.jpg') no-repeat center center; 
    background-size: cover; /* Makes the image cover the entire element */
    min-height: calc(100vh - 56px); 
    position: relative;
}


